{"version":3,"sources":["data/audio.mp3","serviceWorker.js","components/Container.js","components/Title.js","components/List.js","components/Box.js","components/Loading.js","pages/Home.js","utils/episodeFormat.js","components/Opening.js","pages/Film.js","pages/Error404.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","styled","div","_templateObject","span","Title_templateObject","ul","List_templateObject","Container","li","Box_templateObject","StyleLink","Link","_templateObject2","Box","_ref","id","url","title","react_default","a","createElement","Box_Container","to","pathname","concat","Loading_templateObject","Loading","Loading_Container","App","fetching","films","this","setState","axios","get","data","results","map","film","episode_id","_this$state","Title","components_Loading","List","components_Box","Object","assign","key","Component","episodeFormat","num","Content","Opening_templateObject","Animation","Opening_templateObject2","Text","_templateObject3","Opening","episode","description","defaultProps","Film","props","opening_crawl","toUpperCase","preload","src","audio","autoPlay","kind","components_Opening","Error404","process","Root","BrowserRouter","basename","Switch","Route","exact","path","component","Home","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.58dcd064.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/audio.92ed57e2.mp3\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from 'styled-components'\n\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100vh;\n`\n","import styled from 'styled-components'\n\nexport default styled.span`\n  color: #03a9f4;\n  font-size: 45px;\n  font-weight: 100;\n  text-align: center;\n`\n","import styled from 'styled-components'\n\nexport default styled.ul`\n  display: grid;\n  gap: 10px;\n  list-style: none;\n  justify-items: center;\n  padding: 0;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nconst Container = styled.li``\n\nconst StyleLink = styled(Link)`\n  color: yellow;\n  text-decoration: none;\n\n  :hover {\n    color: white;\n  }\n`\n\nconst Box = ({ id, url, title }) => (\n  <Container>\n    <StyleLink to={{ pathname: `/Film/${id}`, state: { url } }}>{title}</StyleLink>\n  </Container>\n)\n\nBox.propTypes = {\n  id: PropTypes.number.isRequired,\n  url: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Box\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.span`\n  text-align: center;\n  font-size: 24px;\n  font-weight: 100;\n  color: white;\n`\n\nconst Loading = () => <Container>Loading...</Container>\n\nLoading.propTypes = {}\n\nexport default Loading\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport Container from '../components/Container'\nimport Title from '../components/Title'\nimport List from '../components/List'\nimport Box from '../components/Box'\nimport Loading from '../components/Loading'\n\nclass App extends Component {\n  state = { fetching: false, films: [] }\n\n  async componentDidMount() {\n    this.setState({ fetching: true })\n    const { data } = await axios.get('https://swapi.co/api/films/?format=json')\n\n    const films = data.results.map(film => ({\n      id: film.episode_id,\n      title: film.title,\n      url: film.url,\n    })) || []\n\n    this.setState({ films, fetching: false })\n  }\n\n  render() {\n    const { films, fetching } = this.state\n\n    return (\n      <Container>\n        <Title>Films Star Wars</Title>\n        {fetching ? (\n          <Loading />\n        ) : (\n          <List>\n            {films.map(film => (\n              <Box key={film.id} {...film} />\n            ))}\n          </List>\n        )}\n      </Container>\n    )\n  }\n}\n\nexport default App\n","export default (num) => {\n  if (typeof num !== 'number') return ''\n\n  const roman = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X']\n\n  return roman[num - 1]\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst Content = styled.div`\n  animation: scroll 250s linear 0s;\n  position: absolute;\n  top: 100%;\n`\n\nconst Animation = styled.div`\n  font-family: Century Gothic, CenturyGothic, AppleGothic, sans-serif;\n  transform: perspective(300px) rotateX(25deg);\n  transform-origin: 50% 100%;\n  text-align: justify;\n  position: absolute;\n  margin-left: -9em;\n  font-weight: bold;\n  overflow: hidden;\n  font-size: 350%;\n  height: 50em;\n  width: 18em;\n  bottom: 0;\n\n  @media (max-width: 576px) {\n    max-width: 320px;\n  }\n\n  @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\n    max-width: 620px;\n  }\n\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n\n  :after {\n    position: absolute;\n    content: ' ';\n    bottom: 60%;\n    left: 0;\n    right: 0;\n    top: 0;\n  }\n\n  @keyframes scroll {\n    0% {\n      top: 100%;\n    }\n    100% {\n      top: -170%;\n    }\n  }\n`\nconst Text = styled.p`\n  color: #ffff82;\n  text-align: center;\n  font-size: 50px;\n\n  @media (max-width: 576px) {\n    font-size: 24px;\n  }\n`\n\nconst Opening = ({ episode, title, description }) => (\n  <Animation>\n    <Content>\n      <Text>{`Episode ${episode}`}</Text>\n      <Text>{title}</Text>\n      <Text>{description}</Text>\n    </Content>\n  </Animation>\n)\n\nOpening.propTypes = {\n  episode: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.string,\n}\n\nOpening.defaultProps = { episode: '', title: '', description: '' }\n\nexport default Opening\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\n\nimport episodeFormat from '../utils/episodeFormat'\nimport audio from '../data/audio.mp3'\n\nimport Container from '../components/Container'\nimport Opening from '../components/Opening'\n\nclass Film extends Component {\n  state = { title: '', description: '' }\n\n  async componentDidMount() {\n    const { location } = this.props\n    const { data = { title: '', opening_crawl: '', episode_id: '' } } = await axios.get(\n      `${location.state.url}?format=json`,\n    )\n\n    this.setState({\n      title: data.title.toUpperCase(),\n      description: data.opening_crawl,\n      episode: episodeFormat(data.episode_id),\n    })\n  }\n\n  render() {\n    const { title, description, episode } = this.state\n\n    return (\n      <Container>\n        <audio preload=\"auto\" src={audio} autoPlay>\n          <track kind=\"captions\" />\n        </audio>\n        <Opening episode={episode} title={title} description={description} />\n      </Container>\n    )\n  }\n}\n\nFilm.propTypes = {\n  location: PropTypes.shape({\n    state: PropTypes.shape({ url: PropTypes.string.isRequired }),\n  }).isRequired,\n}\n\nexport default Film\n","import React from 'react'\n\nimport Container from '../components/Container'\nimport Title from '../components/Title'\n\nconst Error404 = () => (\n  <Container>\n    <Title>Error 404</Title>\n  </Container>\n)\n\nexport default Error404\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker'\n\nimport Home from './pages/Home'\nimport Film from './pages/Film'\nimport Error404 from './pages/Error404'\n\nconsole.log(process.env.PUBLIC_URL)\n\nconst Root = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/film/:id\" component={Film} />\n      <Route component={Error404} />\n    </Switch>\n  </BrowserRouter>\n)\n\nReactDOM.render(Root, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}